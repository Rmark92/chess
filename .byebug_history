c
@board.abbrev_display
c
@board.abbrev_display
c
@board.abbrev_display
c
@board.abbrev_display
exit
@board.abbrev_display
exit
@board.abbrev_display
depth
piece.abbrev_display
piece
exit
c
piece.abbrev_display
piece
new_pos
captured.abbrev_display
self.abbrev_display
captured
c
piece.abbrev_display
c
@best
c
@board.abbrev_display
c
@board.abbrev_display
c
@board.abbrev_display
c
@board.abbrev_display
c
@board.abbrev_display
c
@board.abbrev_display
c
@board.abbrev_display
c
@board.abbrev_display
c
@board.abbrev_display
c
@board.abbrev_display
c
@board.abbrev_display
c
@board.abbrev_display
c
@board.abbrev_display
c
@board.abbrev_display
@best
c
@best
@board.abbrev_display
c
piece.abbrev_display
c
@board.abbrev_display
c
@board.abbrev_display
c
@best
@best_move
c
@board.abbrev_display
c
@board.abbrev_display
c
@board.abbrev_display
c
@board.abbrev_display
c
@board.abbrev_display
exit
continue
@board.abbrev_display
c
piece.position
piece.class
piece
c
@board.pieces(color).map { |piece| piece.class }
@board.abbrev_display
piece.position
piece.valid_moves
piece.class
c
@board.abbrev_display
piece.class
c
piece.class
@board.abbrev_display
piece.class
c
piece.class
piece
c
@board.abbrev_display
exit
@board.abbrev_display
exit
@board.grid.map { |row| row.map { |sq| sq.class } }
@board.grid.map { |sq| sq.class }
@board
c
@board.grid
@board.display
piece.valid_moves
piece
c
@move_search.best
exit
continue
piece.valid_moves
piece
c
piece.valid_moves
piece
n
castle_moves
exit
castle_moves
exit
board[[7,7]]
board[7,7]
position[0]
n
sliding_moves_arr
n
result
n
offsets
s
n
has_moved
s
exit
n
exit
self
has_moved
s
c
sliding_moves
n
sliding_moves
